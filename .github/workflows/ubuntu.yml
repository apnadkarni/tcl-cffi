name: Ubuntu

on:
  workflow_dispatch:
    inputs:
      tcltag:  # User input for selecting Tcl tag
        description: 'Tcl version'
        required: true
        type: choice
        options:
          - '["core-9-0-0"]'
          - '["core-8-6-13"]'
          - '["main"]'
          - '["core-8-6-branch"]'
          - '["core-8-6-13", "core-9-0-0"]'
          - '["core-8-6-13", "core-9-0-0", "main", "core-8-6-branch"]'
        default: '["core-8-6-13", "core-9-0-0"]'
      osver:  # User input for selecting OS
        description: 'OS version'
        required: true
        type: choice
        options:
          - '["ubuntu-latest"]'
          - '["ubuntu-20.04"]'
          - '["ubuntu-22.04"]'
          - '["ubuntu-24.04"]'
          - '["ubuntu-20.04", "ubuntu-22.04", "ubuntu-24.04"]'
        default: '["ubuntu-20.04"]'
      dotest: # Whether tests should be run
        description: 'Run tests as well'
        required: false
        default: true
        type: boolean
      dyncall: # Build with dyncall
        description: 'Build dyncall version'
        required: false
        default: true
        type: boolean
      libffi: # Build with libffi
        description: 'Build libffi version'
        required: false
        default: true
        type: boolean

jobs:
  build:
    strategy:
      matrix:
        os: ${{ fromJSON(github.event.inputs.osver) }}
        tclbranch: ${{ fromJSON(github.event.inputs.tcltag) }}

    runs-on: ${{ matrix.os }}

    steps:
    - name: Setup Tcl
      id: tcl-setup-step
      uses: apnadkarni/tcl-setup@v1
      with:
        tcl-osver: ${{ matrix.os }}
        tcl-branch: ${{ matrix.tclbranch }}

    - name: Install libuuid
      id: uuid
      run: |
       sudo apt-get update
       sudo apt-get install uuid-dev

    - name: Install dyncall
      if: inputs.dyncall
      run: |
        wget https://dyncall.org/r1.4/dyncall-1.4.tar.gz
        tar xf dyncall-1.4.tar.gz
        cd dyncall-1.4
        mkdir build
        cd build
        ../configure --prefix=$GITHUB_WORKSPACE/external-libs/ubuntu/x64
        make
        make install
        find $GITHUB_WORKSPACE/external-libs/ubuntu/x64 -print

    - name: Build with dyncall extension
      if: inputs.dyncall
      uses: apnadkarni/tcl-build-extension@build-opts
      with:
        tcl-dotest: ${{ inputs.dotest }}
        ext-config-opts: 'LDFLAGS=-L$GITHUB_WORKSPACE/external-libs/ubuntu/x64/lib CPPFLAGS=-I$GITHUB_WORKSPACE/external-libs/ubuntu/x64/include --with-dyncall'

    - name: Build with libffi extension
      if: inputs.libffi
      uses: apnadkarni/tcl-build-extension@build-opts
      with:
        tcl-dotest: ${{ inputs.dotest }}
        ext-config-opts: '--disable-staticffi'
  

