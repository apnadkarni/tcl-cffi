name: Ubuntu

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        tclbranch:
          - core-8-6-13
          - main
    env:
      TCLSUBDIR: ${{ matrix.tclbranch }}
      TCLDIR: /tmp/tcl/${{ matrix.tclbranch }}

    steps:
    - name: Checkout tcl-cffi  
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Cache Tcl build
      id: tcl-cache
      uses: actions/cache@v3
      with:
        path: ${{ env.TCLDIR }}
        key: ${{ runner.os }}-tcl-${{ env.TCLSUBDIR }}

    - name: Checkout Tcl
      if: steps.tcl-cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: tcltk/tcl
        ref: ${{ matrix.tclbranch }}
        path: tcl-${{ matrix.tclbranch }}

    - name: Build Tcl
      if: steps.tcl-cache.outputs.cache-hit != 'true'
      working-directory: tcl-${{ matrix.tclbranch }}/unix
      run: |
        mkdir build
        cd build
        ../configure --prefix=${{ env.TCLDIR }} || (cat config.log && exit 1)
        make
        make install

    - name: Install dyncall
      run: |
        wget https://dyncall.org/r1.2/dyncall-1.2.tar.gz
        tar xf dyncall-1.2.tar.gz
        cd dyncall-1.2
        mkdir build
        cd build
        ../configure --prefix=$GITHUB_WORKSPACE/external-libs/ubuntu/x64
        make
        make install

    - name: Configure with dyncall
      run: |
        mkdir build-dyncall
        cd build-dyncall
        ../configure --with-tcl=${{ env.TCLDIR }}/lib --enable-64bit LDFLAGS=-L$GITHUB_WORKSPACE/external-libs/ubuntu/x64/lib CPPFLAGS=-I$GITHUB_WORKSPACE/external-libs/ubuntu/x64/include --with-dyncall

    - name: Make with dyncall
      run: |
        cd build-dyncall
        make

    - name: Test with dyncall
      run: |
        cd build-dyncall
        make test

    - name: Configure with libffi
      run: |
        mkdir build-libffi
        cd build-libffi
        ../configure --with-tcl=${{ env.TCLDIR }}/lib --enable-64bit

    - name: Make with libffi
      run: |
        cd build-libffi
        make

    - name: Test with libffi
      run: |
        cd build-libffi
        make test
