name: mac

on:
  workflow_dispatch:
    inputs:
      tcltag:  # User input for selecting Tcl tag
        description: 'Tcl version'
        required: true
        options:
          - '["core-8-6-13"]'
          - '["main"]'
          - '["core-8-6-13", "main"]'
        default: '["core-8-6-13", "main"]'
        type: choice
      osver:  # User input for selecting OS
        description: 'OS version'
        required: true
        type: choice
        options:
          - '["macos-latest"]'
          - '["macos-12"]'
          - '["macos-13"]'
          - '["macos-14"]'
          - '["macos-12", "macos-13", "macos-14"]'
        default: '["macos-latest"]'
      dotest: # Whether tests should be run
        description: 'Run tests as well'
        required: false
        default: true
        type: boolean

jobs:
  build:
    strategy:
      matrix:
        os: ${{ fromJSON(github.event.inputs.osver) }}
        tclbranch: ${{ fromJSON(github.event.inputs.tcltag) }}
    runs-on: ${{ matrix.os }}

    steps:

    - name: Update brew
      run: |
        brew update

    - name: Setup Tcl
      id: tcl-setup-step
      uses: apnadkarni/tcl-setup@v1
      with:
        tcl-osver: ${{ matrix.os }}
        tcl-branch: ${{ matrix.tclbranch }}

    - name: Install libffi
      run: |
        brew install libffi || true

    - name: Checkout tcl-cffi
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install dyncall
      run: |
        wget https://dyncall.org/r1.4/dyncall-1.4.tar.gz
        tar xf dyncall-1.4.tar.gz
        cd dyncall-1.4
        mkdir build
        cd build
        ../configure --prefix=$GITHUB_WORKSPACE/external-libs/macos
        make
        make install

    - name: Configure with dyncall
      run: |
        mkdir build-dyncall
        cd build-dyncall
        ../configure --with-tcl=${{ env.TCLDIR }}/lib LDFLAGS=-L$GITHUB_WORKSPACE/external-libs/macos/lib CPPFLAGS=-I$GITHUB_WORKSPACE/external-libs/macos/include --with-dyncall

    - name: Make with dyncall
      run: |
        cd build-dyncall
        make

    - name: Test with dyncall
      if: github.event.inputs.dotest
      run: |
        cd build-dyncall
        make test
      env:
        ERROR_ON_FAILURES: 1

    - name: Configure with libffi
      run: |
        mkdir build-libffi
        cd build-libffi
        ../configure --with-tcl=${{ env.TCLDIR }}/lib LDFLAGS="-L/usr/local/opt/libffi/lib -L$HOMEBREW_PREFIX/opt/libffi/lib" CFLAGS="-I/usr/local/opt/libffi/include -I$HOMEBREW_PREFIX/opt/libffi/include" --disable-staticffi

    - name: Make with libffi
      run: |
        cd build-libffi
        make

    - name: Test with libffi
      if: github.event.inputs.dotest
      run: |
        cd build-libffi
        make test
      env:
        ERROR_ON_FAILURES: 1

