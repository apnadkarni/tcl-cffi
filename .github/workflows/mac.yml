name: mac

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-13, macos-14]
        tclbranch:
          - core-8-6-13
          - main
    runs-on: ${{ matrix.os }}
    env:
      TCLSUBDIR: ${{ matrix.tclbranch }}
      TCLDIR: /tmp/tcl/${{ matrix.tclbranch }}

    steps:

    - name: Update brew
      run: |
        brew update

    - name: Install libffi
      run: |
        brew install libffi || true

    # macos 14 should already have a libuuid
    - name: Install libuuid
      if: ${{ matrix.os }} != 'macos-14'
      run: |
        brew install ossp-uuid || true

    - name: Find uuid
      run: |
        echo '#include <uuid/uuid.h>' > x.c && gcc -v -E x.c
        find /usr/include -name uuid.h
        cat /usr/include/uuid/uuid.h
        find /usr/lib -name '*uuid*'
        false

    - name: Checkout tcl-cffi
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Cache Tcl build
      id: tcl-cache
      uses: actions/cache@v4
      with:
        path: ${{ env.TCLDIR }}
        key: ${{ runner.os }}-${{ matrix.os }}-tcl-${{ env.TCLSUBDIR }}

    - name: Checkout Tcl
      if: steps.tcl-cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: tcltk/tcl
        ref: ${{ matrix.tclbranch }}
        path: tcl-${{ matrix.tclbranch }}

    - name: Build Tcl
      if: steps.tcl-cache.outputs.cache-hit != 'true'
      working-directory: tcl-${{ matrix.tclbranch }}/unix
      run: |
        mkdir build
        cd build
        ../configure --prefix=${{ env.TCLDIR }} || (cat config.log && exit 1)
        make
        make install

    - name: Install dyncall
      run: |
        wget https://dyncall.org/r1.4/dyncall-1.4.tar.gz
        tar xf dyncall-1.4.tar.gz
        cd dyncall-1.4
        mkdir build
        cd build
        ../configure --prefix=$GITHUB_WORKSPACE/external-libs/macos
        make
        make install

    - name: Configure with dyncall
      run: |
        mkdir build-dyncall
        cd build-dyncall
        ../configure --with-tcl=${{ env.TCLDIR }}/lib LDFLAGS=-L$GITHUB_WORKSPACE/external-libs/macos/lib CPPFLAGS=-I$GITHUB_WORKSPACE/external-libs/macos/include --with-dyncall

    - name: Make with dyncall
      run: |
        cd build-dyncall
        make

    - name: Test with dyncall
      run: |
        cd build-dyncall
        make test
      env:
        ERROR_ON_FAILURES: 1

    - name: Configure with libffi
      run: |
        mkdir build-libffi
        cd build-libffi
        ../configure --with-tcl=${{ env.TCLDIR }}/lib LDFLAGS="-L/usr/local/opt/libffi/lib" CFLAGS="-I/usr/local/opt/libffi/include" --disable-staticffi

    - name: Make with libffi
      run: |
        cd build-libffi
        make

    - name: Test with libffi
      run: |
        cd build-libffi
        make test
      env:
        ERROR_ON_FAILURES: 1

