name: Mingw

on:
  workflow_dispatch:
    inputs:
      tcltag:  # User input for selecting Tcl tag
        description: 'Tcl version'
        required: true
        type: choice
        options:
          - '["core-9-0-0"]'
          - '["core-8-6-13"]'
          - '["main"]'
          - '["core-8-6-branch"]'
          - '["core-8-6-13", "core-9-0-0"]'
          - '["core-8-6-13", "core-9-0-0", "main", "core-8-6-branch"]'
        default: '["core-8-6-13", "core-9-0-0"]'
      msystem:
        description: 'mingw32 and/or mingw64'
        required: false
        type: choice
        options:
          - '["mingw64"]'
          - '["mingw32"]'
          - '["mingw64", "mingw32"]'
        default: '["mingw64", "mingw32"]'
      dotest: # Whether tests should be run
        description: 'Run tests as well'
        required: false
        default: true
        type: boolean

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        tclbranch: ${{ fromJSON(github.event.inputs.tcltag) }}
        msystem: ${{ fromJSON(github.event.inputs.msystem) }}

    defaults:
      run:
        shell: msys2 {0}

    steps:

    - name: Set up msys2 for mingw32
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.msystem }}
        pacboy: "git: make: gcc:p"
        path-type: minimal
        release: true
        update: false
        cache: true

    - name: Verify toolchain
      run: |
        gcc -v
        make -v

    - name: Setup Tcl
      id: tcl-setup-step
      uses: apnadkarni/tcl-setup@action-debug
      with:
        tcl-tag: ${{ matrix.tcl-tag }}

    - name: Cache dyncall
      id: dyncall-cache
      uses: actions/cache@v4
      with:
        path: C:/dyncall
        key: ${{ runner.os }}-dyncall-${{ matrix.arch }}

    - name: Install dyncall
      if: steps.dyncall-cache.outputs.cache-hit != 'true'
      run: |
        wget https://dyncall.org/r1.4/dyncall-1.4.tar.gz
        tar xf dyncall-1.4.tar.gz
        cd dyncall-1.4
        mkdir build
        cd build
        ../configure --prefix=/c/dyncall
        make
        make install

    - name: Install libffi
      run: |
        pacman --sync --refresh --needed --noconfirm  ${MINGW_PACKAGE_PREFIX}-libffi

    - name: Configure with dyncall
      run: |
        mkdir build-dyncall
        cd build-dyncall
        ../configure --with-tcl=${{ env.TCLDIR }}/lib --with-tclinclude=${{ env.TCLDIR }}/include LDFLAGS=-L/c/dyncall/lib CPPFLAGS=-I/c/dyncall/include --with-dyncall

    - name: Make with dyncall
      run: |
        cd build-dyncall
        make

    - name: Test with dyncall
      run: |
        cd build-dyncall
        make test
      env:
        ERROR_ON_FAILURES: 1

    - name: Configure with libffi
      run: |
        mkdir build-libffi
        cd build-libffi
        ../configure --with-tcl=${{ env.TCLDIR }}/lib --with-tclinclude=${{ env.TCLDIR }}/include

    - name: Make with libffi
      run: |
        cd build-libffi
        make

    - name: Test with libffi
      run: |
        cd build-libffi
        make test
      env:
        ERROR_ON_FAILURES: 1
