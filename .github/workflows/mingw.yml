name: Mingw

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        sys:
          - mingw64
          - mingw32

    defaults:
      run:
        shell: msys2 {0}

    steps:
    - name: Checkout tcl-cffi
      uses: actions/checkout@v2

    - name: Set up msys2
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.sys }}
        path-type: minimal
        release: false
        update: false

    - name: Cache Tcl build
      id: tcl-cache
      uses: actions/cache@v2
      with:
        path: C:/tcl
        key: ${{ runner.os }}-tcl-${{ matrix.sys }}

    - name: Checkout Tcl
      if: steps.tcl-cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: tcltk/tcl
        ref: core-8-6-11
        path: tcl

    - name: Build Tcl
      if: steps.tcl-cache.outputs.cache-hit != 'true'
      run: |
        cd tcl/win
        mkdir build
        cd build
        ../configure --prefix=C:/tcl || (cat config.log && exit 1)
        make
        make install

    - name: Cache dyncall
      id: dyncall-cache
      uses: actions/cache@v2
      with:
        path: C:/dyncall
        key: ${{ runner.os }}-dyncall-${{ matrix.sys }}

    - name: Install dyncall
      if: steps.dyncall-cache.outputs.cache-hit != 'true'
      run: |
        wget https://dyncall.org/r1.2/dyncall-1.2.tar.gz
        tar xf dyncall-1.2.tar.gz
        cd dyncall-1.2
        mkdir build
        cd build
        ../configure --prefix=/c/dyncall
        make
        make install

    - name: Configure tcl-cffi
      run: |
        mkdir build
        cd build
        ../configure --with-tcl=/c/tcl/lib LDFLAGS=-L/c/dyncall/lib CPPFLAGS=-I/c/dyncall/include

    - name: Make
      run: |
        cd build
        make
        make test
