name: Visual C++

# NOTE: Caching does not work on Windows due to a bug in the cache action.
# That has been fixed in 2.1.4 but that introduced other bugs because of
# which cache@v2 continues to point to 2.1.3. For now caching no workee
# but will automatically work once cache fixes their code.
# See https://github.com/actions/toolkit/issues/632 and https://github.com/actions/cache/issues/527

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        arch:
          - amd64
          - amd64_x86

    steps:
    # Note msvc defaults to 64-bit
    - name: Init MSVC
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.arch }}

    - name: Checkout tcl-cffi
      uses: actions/checkout@v2

    - name: Cache Tcl build
      id: tcl-msvc-cache
      uses: actions/cache@v2
      with:
        path: C:/tcl/msvc/${{ matrix.arch }}
        key: ${{ runner.os }}-tcl-msvc-${{ matrix.arch }}

    - name: Checkout Tcl
      if: steps.tcl-msvc-cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: tcltk/tcl
        ref: core-8-6-11
        path: tcl

    - name: Build Tcl
      if: steps.tcl-msvc-cache.outputs.cache-hit != 'true'
      working-directory: tcl/win
      shell: cmd
      run: |
        nmake /f makefile.vc INSTALLDIR=C:\tcl\msvc\${{ matrix.arch }}
        nmake /f makefile.vc INSTALLDIR=C:\tcl\msvc\${{ matrix.arch }} install

    - name: Cache dyncall
      id: dyncall-msvc-cache
      uses: actions/cache@v2
      with:
        path: C:/dyncall/msvc/${{ matrix.arch }}
        key: ${{ runner.os }}-dyncall-msvc-${{ matrix.arch }}

    - name: Install dyncall
      if: steps.dyncall-msvc-cache.outputs.cache-hit != 'true'
      shell: cmd
      run: |
        curl https://dyncall.org/r1.2/dyncall-1.2.zip --output dyncall-1.2.zip
        7z x dyncall-1.2.zip
        cd dyncall-1.2
        mkdir build-msvc-${{ matrix.arch }}
        cd build-msvc-${{ matrix.arch }}
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=C:\dyncall\msvc\${{ matrix.arch }} -G"NMake Makefiles" ..
        cd ..
        cmake --build build-msvc-${{ matrix.arch }} --config Release
        cmake --build build-msvc-${{ matrix.arch }} --config Release --target install

    - name: Make
      shell: cmd
      run: |
        cd win
        nmake /f makefile.vc INSTALLDIR=C:\tcl\msvc\${{ matrix.arch }} DYNCALLDIR=c:\dyncall\msvc\${{ matrix.arch }}

    - name: Test
      shell: cmd
      run: |
        cd win
        nmake /f makefile.vc INSTALLDIR=C:\tcl\msvc\${{ matrix.arch }} DYNCALLDIR=c:\dyncall\msvc\${{ matrix.arch }} test
