name: Visual C++

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        arch:
          - x64
          - x86
        tclbranch:
          - core-8-6-13
          - main
    env:
      TCLSUBDIR: ${{ matrix.arch }}-${{ matrix.tclbranch }}
      TCLDIR: C:/tcl/msvc/${{ matrix.arch }}-${{ matrix.tclbranch }}
    steps:
    # Note msvc defaults to 64-bit
    - name: Init MSVC
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.arch }}

    - name: Checkout tcl-cffi
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Cache Tcl build
      id: tcl-msvc-cache
      uses: actions/cache@v3
      with:
        path: ${{ env.TCLDIR }}
        key: ${{ runner.os }}-tcl-msvc-${{ env.TCLSUBDIR }}

    - name: Checkout Tcl
      if: steps.tcl-msvc-cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: tcltk/tcl
        ref: ${{ matrix.tclbranch }}
        path: tcl-${{ matrix.tclbranch }}

    - name: Build Tcl
      if: steps.tcl-msvc-cache.outputs.cache-hit != 'true'
      working-directory: tcl-${{ matrix.tclbranch }}/win
      shell: cmd
      run: |
        nmake /f makefile.vc INSTALLDIR=${{ env.TCLDIR }}
        nmake /f makefile.vc INSTALLDIR=${{ env.TCLDIR }} install

    - name: Install libffi
      shell: cmd
      run: |
        %VCPKG_INSTALLATION_ROOT%\vcpkg install libffi:${{ matrix.arch }}-windows-static-md

    - name: Cache dyncall
      id: dyncall-msvc-cache
      uses: actions/cache@v3
      with:
        path: C:/dyncall/msvc/${{ matrix.arch }}
        key: ${{ runner.os }}-dyncall-msvc-${{ matrix.arch }}

    - name: Install dyncall
      if: steps.dyncall-msvc-cache.outputs.cache-hit != 'true'
      shell: cmd
      run: |
        curl https://dyncall.org/r1.4/dyncall-1.4.zip --output dyncall-1.4.zip
        7z x dyncall-1.4.zip
        cd dyncall-1.4
        mkdir build-msvc-${{ matrix.arch }}
        cd build-msvc-${{ matrix.arch }}
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=C:\dyncall\msvc\${{ matrix.arch }} -G"NMake Makefiles" ..
        cd ..
        cmake --build build-msvc-${{ matrix.arch }} --config Release
        cmake --build build-msvc-${{ matrix.arch }} --config Release --target install

    - name: Make with libffi
      shell: cmd
      run: |
        cd win
        nmake /f makefile.vc INSTALLDIR=${{ env.TCLDIR }} EXTDIR=%VCPKG_INSTALLATION_ROOT%\installed\${{ matrix.arch }}-windows-static-md realclean
        nmake /f makefile.vc INSTALLDIR=${{ env.TCLDIR }} EXTDIR=%VCPKG_INSTALLATION_ROOT%\installed\${{ matrix.arch }}-windows-static-md

    - name: Test with libffi
      shell: cmd
      run: |
        cd win
        nmake /f makefile.vc INSTALLDIR=${{ env.TCLDIR }} EXTDIR=%VCPKG_INSTALLATION_ROOT%\installed\${{ matrix.arch }}-windows-static-md test

    - name: Make with dyncall
      shell: cmd
      run: |
        cd win
        nmake /f makefile.vc OPTS=dyncall INSTALLDIR=${{ env.TCLDIR }} EXTDIR=c:\dyncall\msvc\${{ matrix.arch }} realclean
        nmake /f makefile.vc  OPTS=dyncall INSTALLDIR=${{ env.TCLDIR }} EXTDIR=c:\dyncall\msvc\${{ matrix.arch }}

    - name: Test with dyncall 
      shell: cmd
      run: |
        cd win
        nmake /f makefile.vc OPTS=dyncall INSTALLDIR=${{ env.TCLDIR }} EXTDIR=c:\dyncall\msvc\${{ matrix.arch }} test


