# (c) 2021 Ashok P. Nadkarni
# See LICENSE for license terms.

namespace eval ${NS}::alias {
    proc define {args} {
        # Defines one or more type aliases.
        #  name - Name for type alias. Must begin with an alphabetic
        #   character and may contain alphanumerics and underscore.
        #  definition - definition for the alias
        #  aliasdefs - dictionary mapping alias names to their definition
        #
        # Synopsis: name definition
        # Synopsis: aliasdefs
        #
        # Given two arguments, creates an alias of the given name for
        # passed definition.
        # If a single argument is provided, it must be a dictionary mapping
        # alias names to their definitions.
        #
        # An error will be raised if an alias name matches a built-in
        # type or if an alias of that name already exists with a different
        # definition.
        #
        # The definition may itself be based on an existing alias. In this
        # case the existing alias is immediately resolved and expanded
        # as part of the definition so further changes to it are not reflected
        # in the alias being defined.
        #
        # See [Type aliases] for more on type aliases.
    }
    proc body {alias_name} {
        # Returns the resolved body of an alias.
        #  alias_name - Name of alias to be retrieved.
    }
    proc list {{pattern *}} {
        # Returns a list of aliases matching the specified pattern.
        #  pattern - pattern to match against aliases
        # The pattern matching algorithm is the same as that of Tcl's
        # `string match` command.
    }
    proc delete {pattern} {
        # Deletes type aliases matching a pattern.
        #  pattern - pattern to match against aliases
        # The pattern matching algorithm is the same as that of Tcl's
        # `string match` command.
        # It is not an error if the pattern does not match any aliasses.

    }
    proc load {alias_set} {
        # Loads predefined type aliases.
        #  alias_set - the alias set to load.
        #
        # The possible values of $alias_set are `C`, `win32` (Windows only),
        # or `posix` (platform dependent).
        #
        # The `C` predefined alias set includes
        # `int8_t` `uint8_t` `int16_t` `uint16_t` `int32_t`
        #   `uint32_t` `int64_t` `uint64_t` `size_t`
        #
        # The `win32` predefined alias set includes `BOOL` `BOOLEAN` `BYTE`
        # `CHAR` `DWORD` `DWORDLONG` `DWORD_PTR` `HALF_PTR` `HANDLE` `INT`
        # `INT_PTR` `LONG` `LONGLONG` `LONG_PTR` `LPARAM` `LPSTR` `LPVOID`
        # `LPWSTR` `LRESULT` `SHORT` `SIZE_T` `SSIZE_T` `UCHAR` `UINT`
        # `UINT_PTR` `ULONG` `ULONGLONG` `ULONG_PTR` `USHORT` `WORD` `WPARAM`
        #
        # The `posix` alias set is platform dependent. In POSIX compliant
        # environments, it includes `blkcnt_t` `blksize_t` `clock_t`
        # `dev_t` `fsblkcnt_t` `fsfilcnt_t` `gid_t` `id_t` `ino_t` `key_t`
        # `mode_t` `nlink_t` `off_t` `pid_t` `size_t` `ssize_t` `suseconds_t`
        # `time_t` `uid_t`. On Windows, it only includes `dev_t` `ino_t` `off_t`
        # `time_t`.
        #
    }
    namespace export *
    namespace ensemble create
}

